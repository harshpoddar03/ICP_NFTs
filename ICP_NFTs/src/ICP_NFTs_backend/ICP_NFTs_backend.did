type HttpHeader = record { value : text; name : text };
type HttpResponse = record {
  status : nat;
  body : blob;
  headers : vec HttpHeader;
};
type NFT = record {
  model : text;
  owner : principal;
  pdfcontent : vec vec record { text; text };
  embeddings : vec vec float32;
};
type Result = variant { Ok; Err : text };
type TransformArgs = record { context : blob; response : HttpResponse };
service : {
  add_authorized_minter : (principal) -> (Result);
  burn_nft : (nat64) -> (bool);
  get_token_content : (nat64) -> (opt NFT) query;
  mint_nft : (
      principal,
      text,
      vec vec float32,
      vec vec record { text; text },
    ) -> (nat64);
  send_http_request : (text, text, text) -> (text);
  transfer_nft : (principal, nat64) -> (bool);
  transform : (TransformArgs) -> (HttpResponse) query;
}